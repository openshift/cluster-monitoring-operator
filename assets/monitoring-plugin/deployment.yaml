apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    capability.openshift.io/name: Console
  labels:
    app.kubernetes.io/component: monitoring-plugin
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: monitoring-plugin
    app.kubernetes.io/part-of: openshift-monitoring
  name: monitoring-plugin
  namespace: openshift-monitoring
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: monitoring-plugin
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: monitoring-plugin
      app.kubernetes.io/part-of: openshift-monitoring
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        openshift.io/required-scc: restricted-v2
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app.kubernetes.io/component: monitoring-plugin
        app.kubernetes.io/managed-by: cluster-monitoring-operator
        app.kubernetes.io/name: monitoring-plugin
        app.kubernetes.io/part-of: openshift-monitoring
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: monitoring-plugin
                app.kubernetes.io/managed-by: cluster-monitoring-operator
                app.kubernetes.io/name: monitoring-plugin
                app.kubernetes.io/part-of: openshift-monitoring
            namespaces:
            - openshift-monitoring
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - -config-path=/opt/app-root/web/dist
        - -static-path=/opt/app-root/web/dist
        - -cert=/var/cert/tls.crt
        - -key=/var/cert/tls.key
        command:
        - /opt/app-root/plugin-backend
        image: ""
        imagePullPolicy: IfNotPresent
        name: monitoring-plugin
        ports:
        - containerPort: 9443
          name: https
        readinessProbe:
          httpGet:
            path: /health
            port: https
            scheme: HTTPS
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/cert
          name: monitoring-plugin-cert
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      volumes:
      - name: monitoring-plugin-cert
        secret:
          defaultMode: 420
          secretName: monitoring-plugin-cert
