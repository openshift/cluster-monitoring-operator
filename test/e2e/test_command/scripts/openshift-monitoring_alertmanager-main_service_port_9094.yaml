tests:
  - script: |
      ## The following example exercises permissions granted by the `monitoring-alertmanager-view` role.
      ## The binding commands must be run by a user with the necessary privileges.
      # Create a test namespace and a service account.
      oc create namespace test-alertmanager-web-monitoring-alertmanager-view
      oc create serviceaccount am-client --namespace=test-alertmanager-web-monitoring-alertmanager-view
      # Bind the role to the service account.
      # The binding in this example is applied to a service account but can also be applied to any user.
      oc create rolebinding test-alertmanager-web-monitoring-alertmanager-view \
        --namespace=openshift-monitoring \
        --role=monitoring-alertmanager-view \
        --serviceaccount=test-alertmanager-web-monitoring-alertmanager-view:am-client
      # Generate a token to access the endpoints.
      TOKEN=$(oc create token am-client --namespace=test-alertmanager-web-monitoring-alertmanager-view)
      # Access Alertmanager endpoints externally.
      ROUTE=$(oc get route alertmanager-main --namespace=openshift-monitoring -ojsonpath={.spec.host})
      curl -k -H "Authorization: Bearer $TOKEN" "https://$ROUTE/api/v2/alerts?filter=alertname=Watchdog"
      # Access Alertmanager endpoints from within the cluster.
      curl -k -H "Authorization: Bearer $TOKEN" "https://alertmanager-main.openshift-monitoring:9094/api/v2/alerts?filter=alertname=Watchdog"
    tearDown: |
      oc delete rolebinding test-alertmanager-web-monitoring-alertmanager-view --namespace=openshift-monitoring
      oc delete namespace test-alertmanager-web-monitoring-alertmanager-view --wait=false
  - script: |
      ## The following example exercises permissions granted by the `monitoring-alertmanager-edit` role.
      ## The binding commands must be run by a user with the necessary privileges.
      # Create a test namespace and a service account.
      oc create namespace test-alertmanager-web-monitoring-alertmanager-edit
      oc create serviceaccount am-client --namespace=test-alertmanager-web-monitoring-alertmanager-edit
      # Bind the role to the service account.
      # The binding in this example is applied to a service account but can also be applied to any user.
      oc create rolebinding test-alertmanager-web-monitoring-alertmanager-edit \
        --namespace=openshift-monitoring \
        --role=monitoring-alertmanager-edit \
        --serviceaccount=test-alertmanager-web-monitoring-alertmanager-edit:am-client
      # Generate a token to access the endpoints.
      TOKEN=$(oc create token am-client --namespace=test-alertmanager-web-monitoring-alertmanager-edit)
      # Access Alertmanager endpoints externally.
      ROUTE=$(oc get route alertmanager-main --namespace=openshift-monitoring -ojsonpath={.spec.host})
      curl -k -X POST  "https://$ROUTE/api/v2/silences" \
        -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \
        -d '{
          "matchers": [
            {
              "name": "alertname",
              "value": "MyTestAlert1",
              "isRegex": false
            }
          ],
          "startsAt": "2044-01-01T00:00:00Z",
          "endsAt": "2044-01-01T00:00:01Z",
          "createdBy": "test-alertmanager-web-monitoring-alertmanager-edit/am-client",
          "comment": "Silence test"
        }'
      # Access Alertmanager endpoints from within the cluster.
      curl -k -X POST  "https://alertmanager-main.openshift-monitoring:9094/api/v2/silences" \
        -H "Authorization: Bearer $TOKEN" -H "Content-Type: application/json" \
        -d '{
          "matchers": [
            {
              "name": "alertname",
              "value": "MyTestAlert2",
              "isRegex": false
            }
          ],
          "startsAt": "2044-01-01T00:00:00Z",
          "endsAt": "2044-01-01T00:00:01Z",
          "createdBy": "test-alertmanager-web-monitoring-alertmanager-edit/am-client",
          "comment": "Silence test"
        }'
    tearDown: |
      oc delete rolebinding test-alertmanager-web-monitoring-alertmanager-edit --namespace=openshift-monitoring
      oc delete namespace test-alertmanager-web-monitoring-alertmanager-edit --wait=false
