tests:
  - script: |
      # The following example exercises permissions granted by the monitoring-rules-edit Cluster Role.
      # The binding commands are supposed to run by a user with the necessary privileges.
      oc create namespace test-thanos-querier-tenancy-rules-monitoring-rules-edit
      oc create serviceaccount thanos-client --namespace=test-thanos-querier-tenancy-rules-monitoring-rules-edit
      # The binding is done to a Service Account, but it can also be applied to any other user.
      oc create rolebinding test-thanos-querier-tenancy-rules-monitoring-rules-edit \
        --namespace=test-thanos-querier-tenancy-rules-monitoring-rules-edit \
        --clusterrole=monitoring-rules-edit \
        --serviceaccount=test-thanos-querier-tenancy-rules-monitoring-rules-edit:thanos-client
      # The token can then be used to access the endpoints.
      TOKEN=$(oc create token thanos-client --namespace=test-thanos-querier-tenancy-rules-monitoring-rules-edit)
      # Because the port is not exposed by default, the endpoint is assumed to be accessed from within the cluster.
      curl -k -f -H "Authorization: Bearer $TOKEN" "https://thanos-querier.openshift-monitoring:9093/api/v1/rules?namespace=test-thanos-querier-tenancy-rules-monitoring-rules-edit"
      curl -k -f -H "Authorization: Bearer $TOKEN" "https://thanos-querier.openshift-monitoring:9093/api/v1/alerts?namespace=test-thanos-querier-tenancy-rules-monitoring-rules-edit"
    tearDown: |
      oc delete namespace test-thanos-querier-tenancy-rules-monitoring-rules-edit --wait=false
  - script: |
      # The following example exercises permissions granted by the monitoring-edit Cluster Role.
      # The binding commands are supposed to run by a user with the necessary privileges.
      oc create namespace test-thanos-querier-tenancy-rules-monitoring-edit
      oc create serviceaccount thanos-client --namespace=test-thanos-querier-tenancy-rules-monitoring-edit
      # The binding is done to a Service Account, but it can also be applied to any other user.
      oc create rolebinding test-thanos-querier-tenancy-rules-monitoring-edit \
        --namespace=test-thanos-querier-tenancy-rules-monitoring-edit \
        --clusterrole=monitoring-edit \
        --serviceaccount=test-thanos-querier-tenancy-rules-monitoring-edit:thanos-client
      # The token can then be used to access the endpoints.
      TOKEN=$(oc create token thanos-client --namespace=test-thanos-querier-tenancy-rules-monitoring-edit)
      # Because the port is not exposed by default, the endpoint is assumed to be accessed from within the cluster.
      curl -k -f -H "Authorization: Bearer $TOKEN" "https://thanos-querier.openshift-monitoring:9093/api/v1/rules?namespace=test-thanos-querier-tenancy-rules-monitoring-edit"
      curl -k -f -H "Authorization: Bearer $TOKEN" "https://thanos-querier.openshift-monitoring:9093/api/v1/alerts?namespace=test-thanos-querier-tenancy-rules-monitoring-edit"
    tearDown: |
      oc delete namespace test-thanos-querier-tenancy-rules-monitoring-edit --wait=false
  - script: |
      # The following example exercises permissions granted by the monitoring-rules-view Cluster Role.
      # The binding commands are supposed to run by a user with the necessary privileges.
      oc create namespace test-thanos-querier-tenancy-rules-monitoring-rules-view
      oc create serviceaccount thanos-client --namespace=test-thanos-querier-tenancy-rules-monitoring-rules-view
      # The binding is done to a Service Account, but it can also be applied to any other user.
      oc create rolebinding test-thanos-querier-tenancy-rules-monitoring-rules-view \
        --namespace=test-thanos-querier-tenancy-rules-monitoring-rules-view \
        --clusterrole=monitoring-rules-view \
        --serviceaccount=test-thanos-querier-tenancy-rules-monitoring-rules-view:thanos-client
      # The token can then be used to access the endpoints.
      TOKEN=$(oc create token thanos-client --namespace=test-thanos-querier-tenancy-rules-monitoring-rules-view)
      # Because the port is not exposed by default, the endpoint is assumed to be accessed from within the cluster.
      curl -k -f -H "Authorization: Bearer $TOKEN" "https://thanos-querier.openshift-monitoring:9093/api/v1/rules?namespace=test-thanos-querier-tenancy-rules-monitoring-rules-view"
      curl -k -f -H "Authorization: Bearer $TOKEN" "https://thanos-querier.openshift-monitoring:9093/api/v1/alerts?namespace=test-thanos-querier-tenancy-rules-monitoring-rules-view"
    tearDown: |
      oc delete namespace test-thanos-querier-tenancy-rules-monitoring-rules-view --wait=false
